import { Component, forwardRef, input, Optional, ViewEncapsulation, } from '@angular/core';
import { NG_VALUE_ACCESSOR, ReactiveFormsModule, Validators, } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { Subject } from 'rxjs';
import { debounceTime, takeUntil } from 'rxjs/operators';
import { createMissingDateImplError, DEFAULT_STEP, formatTwoDigitTimeValue, LIMIT_TIMES, MERIDIANS, NUMERIC_REGEX, PATTERN_INPUT_HOUR, PATTERN_INPUT_MINUTE, PATTERN_INPUT_SECOND, } from './utils/date-utils';
import * as i0 from "@angular/core";
import * as i1 from "./core/date-adapter";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/icon";
export class NgxMatTimepickerComponent {
    /** Hour */
    get hour() {
        let val = Number(this.form.controls['hour'].value);
        return Number.isNaN(val) ? 0 : val;
    }
    get minute() {
        let val = Number(this.form.controls['minute'].value);
        return Number.isNaN(val) ? 0 : val;
    }
    get second() {
        let val = Number(this.form.controls['second'].value);
        return Number.isNaN(val) ? 0 : val;
    }
    /** Whether or not the form is valid */
    get valid() {
        return this.form.valid;
    }
    constructor(_dateAdapter, cd, formBuilder) {
        this._dateAdapter = _dateAdapter;
        this.cd = cd;
        this.formBuilder = formBuilder;
        this.disabled = input(false);
        this.showSpinners = input(true);
        this.stepHour = input(DEFAULT_STEP);
        this.stepMinute = input(DEFAULT_STEP);
        this.stepSecond = input(DEFAULT_STEP);
        this.showSeconds = input(false);
        this.disableMinute = input(false);
        this.enableMeridian = input(false);
        this.defaultTime = input();
        this.color = input('primary');
        this.meridian = MERIDIANS.AM;
        this._onChange = () => { };
        this._onTouched = () => { };
        this._destroyed = new Subject();
        this.pattern = PATTERN_INPUT_HOUR;
        if (!this._dateAdapter) {
            throw createMissingDateImplError('NgxMatDateAdapter');
        }
        this.form = this.formBuilder.group({
            hour: [
                { value: null, disabled: this.disabled() },
                [Validators.required, Validators.pattern(PATTERN_INPUT_HOUR)],
            ],
            minute: [
                { value: null, disabled: this.disabled() },
                [Validators.required, Validators.pattern(PATTERN_INPUT_MINUTE)],
            ],
            second: [
                { value: null, disabled: this.disabled() },
                [Validators.required, Validators.pattern(PATTERN_INPUT_SECOND)],
            ],
        });
    }
    ngOnInit() {
        this.form.valueChanges.pipe(takeUntil(this._destroyed), debounceTime(400)).subscribe((val) => {
            this._updateModel();
        });
    }
    ngOnChanges(changes) {
        if (changes.disabled || changes.disableMinute) {
            this._setDisableStates();
        }
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
    }
    /**
     * Writes a new value to the element.
     * @param obj
     */
    writeValue(val) {
        if (val != null) {
            this._model = val;
            this._updateHourMinuteSecond();
        }
    }
    /** Registers a callback function that is called when the control's value changes in the UI. */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * Set the function to be called when the control receives a touch event.
     */
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    /** Enables or disables the appropriate DOM element */
    setDisabledState(isDisabled) {
        this._disabled = isDisabled;
        this.cd.markForCheck();
    }
    /**
     * Format input
     * @param input
     */
    formatInput(input) {
        input.value = input.value.replace(NUMERIC_REGEX, '');
    }
    /** Toggle meridian */
    toggleMeridian() {
        this.meridian = this.meridian === MERIDIANS.AM ? MERIDIANS.PM : MERIDIANS.AM;
        this.change('hour');
    }
    /** Change property of time */
    change(prop, up) {
        const next = this._getNextValueByProp(prop, up);
        this.form.controls[prop].setValue(formatTwoDigitTimeValue(next), {
            onlySelf: false,
            emitEvent: false,
        });
        this._updateModel();
    }
    /** Update controls of form by model */
    _updateHourMinuteSecond() {
        let _hour = this._dateAdapter.getHour(this._model);
        const _minute = this._dateAdapter.getMinute(this._model);
        const _second = this._dateAdapter.getSecond(this._model);
        if (this.enableMeridian()) {
            if (_hour >= LIMIT_TIMES.meridian) {
                _hour = _hour - LIMIT_TIMES.meridian;
                this.meridian = MERIDIANS.PM;
            }
            else {
                this.meridian = MERIDIANS.AM;
            }
            if (_hour === 0) {
                _hour = LIMIT_TIMES.meridian;
            }
        }
        this.form.patchValue({
            hour: formatTwoDigitTimeValue(_hour),
            minute: formatTwoDigitTimeValue(_minute),
            second: formatTwoDigitTimeValue(_second),
        }, {
            emitEvent: false,
        });
    }
    /** Update model */
    _updateModel() {
        let _hour = this.hour;
        if (this.enableMeridian()) {
            if (this.meridian === MERIDIANS.AM && _hour === LIMIT_TIMES.meridian) {
                _hour = 0;
            }
            else if (this.meridian === MERIDIANS.PM && _hour !== LIMIT_TIMES.meridian) {
                _hour = _hour + LIMIT_TIMES.meridian;
            }
        }
        if (this._model) {
            const clonedModel = this._dateAdapter.clone(this._model);
            this._dateAdapter.setHour(clonedModel, _hour);
            this._dateAdapter.setMinute(clonedModel, this.minute);
            this._dateAdapter.setSecond(clonedModel, this.second);
            this._onChange(clonedModel);
        }
    }
    /**
     * Get next value by property
     * @param prop
     * @param up
     */
    _getNextValueByProp(prop, up) {
        const keyProp = prop[0].toUpperCase() + prop.slice(1);
        const min = LIMIT_TIMES[`min${keyProp}`];
        let max = LIMIT_TIMES[`max${keyProp}`];
        if (prop === 'hour' && this.enableMeridian()) {
            max = LIMIT_TIMES.meridian;
        }
        let next;
        if (up == null) {
            next = this[prop] % max;
            if (prop === 'hour' && this.enableMeridian()) {
                if (next === 0)
                    next = max;
            }
        }
        else {
            next = up ? this[prop] + this[`step${keyProp}`]() : this[prop] - this[`step${keyProp}`]();
            if (prop === 'hour' && this.enableMeridian()) {
                next = next % (max + 1);
                if (next === 0)
                    next = up ? 1 : max;
            }
            else {
                next = next % max;
            }
            if (up) {
                next = next > max ? next - max + min : next;
            }
            else {
                next = next < min ? next - min + max : next;
            }
        }
        return next;
    }
    /**
     * Set disable states
     */
    _setDisableStates() {
        if (this.disabled()) {
            this.form.disable();
        }
        else {
            this.form.enable();
            if (this.disableMinute()) {
                this.form.get('minute').disable();
                if (this.showSeconds()) {
                    this.form.get('second').disable();
                }
            }
        }
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: NgxMatTimepickerComponent, deps: [{ token: i1.NgxMatDateAdapter, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.0.3", type: NgxMatTimepickerComponent, isStandalone: true, selector: "ngx-mat-timepicker", inputs: { disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null }, showSpinners: { classPropertyName: "showSpinners", publicName: "showSpinners", isSignal: true, isRequired: false, transformFunction: null }, stepHour: { classPropertyName: "stepHour", publicName: "stepHour", isSignal: true, isRequired: false, transformFunction: null }, stepMinute: { classPropertyName: "stepMinute", publicName: "stepMinute", isSignal: true, isRequired: false, transformFunction: null }, stepSecond: { classPropertyName: "stepSecond", publicName: "stepSecond", isSignal: true, isRequired: false, transformFunction: null }, showSeconds: { classPropertyName: "showSeconds", publicName: "showSeconds", isSignal: true, isRequired: false, transformFunction: null }, disableMinute: { classPropertyName: "disableMinute", publicName: "disableMinute", isSignal: true, isRequired: false, transformFunction: null }, enableMeridian: { classPropertyName: "enableMeridian", publicName: "enableMeridian", isSignal: true, isRequired: false, transformFunction: null }, defaultTime: { classPropertyName: "defaultTime", publicName: "defaultTime", isSignal: true, isRequired: false, transformFunction: null }, color: { classPropertyName: "color", publicName: "color", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: "ngx-mat-timepicker" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef((() => NgxMatTimepickerComponent)),
                multi: true,
            },
        ], exportAs: ["ngxMatTimepicker"], usesOnChanges: true, ngImport: i0, template: "<form [formGroup]=\"form\">\r\n  <table class=\"ngx-mat-timepicker-table\">\r\n    <tbody class=\"ngx-mat-timepicker-tbody\">\r\n      @if (showSpinners()) {\r\n        <tr>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"expand_less icon\"\r\n              (click)=\"change('hour', true)\"\r\n              [disabled]=\"disabled()\">\r\n              <mat-icon>\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M18 15l-6-6-6 6\" />\r\n                </svg>\r\n              </mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"expand_less icon\"\r\n              (click)=\"change('minute', true)\"\r\n              [disabled]=\"disabled() || disableMinute()\">\r\n              <mat-icon\r\n                ><svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M18 15l-6-6-6 6\" /></svg\r\n              ></mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          @if (showSeconds()) {\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                mat-icon-button\r\n                aria-label=\"expand_less icon\"\r\n                (click)=\"change('second', true)\"\r\n                [disabled]=\"disabled() || disableMinute()\">\r\n                <mat-icon\r\n                  ><svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"#000000\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\">\r\n                    <path d=\"M18 15l-6-6-6 6\" /></svg\r\n                ></mat-icon>\r\n              </button>\r\n            </td>\r\n          }\r\n          @if (enableMeridian()) {\r\n            <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n            <td></td>\r\n          }\r\n        </tr>\r\n      }\r\n\r\n      <tr>\r\n        <td>\r\n          <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              (input)=\"formatInput($any($event).target)\"\r\n              maxlength=\"2\"\r\n              formControlName=\"hour\"\r\n              (keydown.ArrowUp)=\"change('hour', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('hour', false); $event.preventDefault()\"\r\n              (blur)=\"change('hour')\" />\r\n          </mat-form-field>\r\n        </td>\r\n        <td class=\"ngx-mat-timepicker-spacer\">&#58;</td>\r\n        <td>\r\n          <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              (input)=\"formatInput($any($event).target)\"\r\n              maxlength=\"2\"\r\n              formControlName=\"minute\"\r\n              (keydown.ArrowUp)=\"change('minute', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('minute', false); $event.preventDefault()\"\r\n              (blur)=\"change('minute')\" />\r\n          </mat-form-field>\r\n        </td>\r\n        @if (showSeconds()) {\r\n          <td class=\"ngx-mat-timepicker-spacer\">&#58;</td>\r\n          <td>\r\n            <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n              <input\r\n                type=\"text\"\r\n                matInput\r\n                (input)=\"formatInput($any($event).target)\"\r\n                maxlength=\"2\"\r\n                formControlName=\"second\"\r\n                (keydown.ArrowUp)=\"change('second', true); $event.preventDefault()\"\r\n                (keydown.ArrowDown)=\"change('second', false); $event.preventDefault()\"\r\n                (blur)=\"change('second')\" />\r\n            </mat-form-field>\r\n          </td>\r\n        }\r\n\r\n        @if (enableMeridian()) {\r\n          <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n\r\n          <td class=\"ngx-mat-timepicker-meridian\">\r\n            <button\r\n              mat-button\r\n              (click)=\"toggleMeridian()\"\r\n              mat-stroked-button\r\n              [color]=\"color()\"\r\n              [disabled]=\"disabled()\">\r\n              {{ meridian }}\r\n            </button>\r\n          </td>\r\n        }\r\n      </tr>\r\n\r\n      @if (showSpinners()) {\r\n        <tr>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"keyboard_arrow_down icon\"\r\n              (click)=\"change('hour', false)\"\r\n              [disabled]=\"disabled()\">\r\n              <mat-icon>\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M6 9l6 6 6-6\" />\r\n                </svg>\r\n              </mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"keyboard_arrow_down icon\"\r\n              (click)=\"change('minute', false)\"\r\n              [disabled]=\"disabled() || disableMinute()\">\r\n              <mat-icon\r\n                ><svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M6 9l6 6 6-6\" /></svg\r\n              ></mat-icon>\r\n            </button>\r\n          </td>\r\n          @if (showSeconds()) {\r\n            <td></td>\r\n\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                mat-icon-button\r\n                aria-label=\"keyboard_arrow_down icon\"\r\n                (click)=\"change('second', false)\"\r\n                [disabled]=\"disabled() || disableMinute()\">\r\n                <mat-icon\r\n                  ><svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"#000000\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\">\r\n                    <path d=\"M6 9l6 6 6-6\" /></svg\r\n                ></mat-icon>\r\n              </button>\r\n            </td>\r\n          }\r\n\r\n          @if (enableMeridian()) {\r\n            <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n            <td></td>\r\n          }\r\n        </tr>\r\n      }\r\n    </tbody>\r\n  </table>\r\n</form>\r\n", styles: [".ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td{text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-spacer{font-weight:700}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-meridian .mdc-button{min-width:64px;line-height:36px;min-width:0;border-radius:50%;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-icon-button{height:24px;width:24px;line-height:24px;padding:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field{width:24px;max-width:24px;text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field.mat-focused .mdc-text-field--filled .mat-mdc-form-field-focus-overlay,.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field:hover .mdc-text-field--filled .mat-mdc-form-field-focus-overlay{background-color:transparent}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled{background-color:transparent!important;padding:0!important}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled .mat-mdc-form-field-infix{padding:4px 0;min-height:1px!important}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled .mat-mdc-form-field-infix input{text-align:center;font-size:14px}\n"], dependencies: [{ kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i5.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i5.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: NgxMatTimepickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-mat-timepicker', host: {
                        class: 'ngx-mat-timepicker',
                    }, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((() => NgxMatTimepickerComponent)),
                            multi: true,
                        },
                    ], exportAs: 'ngxMatTimepicker', encapsulation: ViewEncapsulation.None, standalone: true, imports: [
                        ReactiveFormsModule,
                        MatFormFieldModule,
                        MatInputModule,
                        MatButtonModule,
                        MatIconModule,
                    ], template: "<form [formGroup]=\"form\">\r\n  <table class=\"ngx-mat-timepicker-table\">\r\n    <tbody class=\"ngx-mat-timepicker-tbody\">\r\n      @if (showSpinners()) {\r\n        <tr>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"expand_less icon\"\r\n              (click)=\"change('hour', true)\"\r\n              [disabled]=\"disabled()\">\r\n              <mat-icon>\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M18 15l-6-6-6 6\" />\r\n                </svg>\r\n              </mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"expand_less icon\"\r\n              (click)=\"change('minute', true)\"\r\n              [disabled]=\"disabled() || disableMinute()\">\r\n              <mat-icon\r\n                ><svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M18 15l-6-6-6 6\" /></svg\r\n              ></mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          @if (showSeconds()) {\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                mat-icon-button\r\n                aria-label=\"expand_less icon\"\r\n                (click)=\"change('second', true)\"\r\n                [disabled]=\"disabled() || disableMinute()\">\r\n                <mat-icon\r\n                  ><svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"#000000\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\">\r\n                    <path d=\"M18 15l-6-6-6 6\" /></svg\r\n                ></mat-icon>\r\n              </button>\r\n            </td>\r\n          }\r\n          @if (enableMeridian()) {\r\n            <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n            <td></td>\r\n          }\r\n        </tr>\r\n      }\r\n\r\n      <tr>\r\n        <td>\r\n          <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              (input)=\"formatInput($any($event).target)\"\r\n              maxlength=\"2\"\r\n              formControlName=\"hour\"\r\n              (keydown.ArrowUp)=\"change('hour', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('hour', false); $event.preventDefault()\"\r\n              (blur)=\"change('hour')\" />\r\n          </mat-form-field>\r\n        </td>\r\n        <td class=\"ngx-mat-timepicker-spacer\">&#58;</td>\r\n        <td>\r\n          <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              (input)=\"formatInput($any($event).target)\"\r\n              maxlength=\"2\"\r\n              formControlName=\"minute\"\r\n              (keydown.ArrowUp)=\"change('minute', true); $event.preventDefault()\"\r\n              (keydown.ArrowDown)=\"change('minute', false); $event.preventDefault()\"\r\n              (blur)=\"change('minute')\" />\r\n          </mat-form-field>\r\n        </td>\r\n        @if (showSeconds()) {\r\n          <td class=\"ngx-mat-timepicker-spacer\">&#58;</td>\r\n          <td>\r\n            <mat-form-field appearance=\"fill\" [color]=\"color()\">\r\n              <input\r\n                type=\"text\"\r\n                matInput\r\n                (input)=\"formatInput($any($event).target)\"\r\n                maxlength=\"2\"\r\n                formControlName=\"second\"\r\n                (keydown.ArrowUp)=\"change('second', true); $event.preventDefault()\"\r\n                (keydown.ArrowDown)=\"change('second', false); $event.preventDefault()\"\r\n                (blur)=\"change('second')\" />\r\n            </mat-form-field>\r\n          </td>\r\n        }\r\n\r\n        @if (enableMeridian()) {\r\n          <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n\r\n          <td class=\"ngx-mat-timepicker-meridian\">\r\n            <button\r\n              mat-button\r\n              (click)=\"toggleMeridian()\"\r\n              mat-stroked-button\r\n              [color]=\"color()\"\r\n              [disabled]=\"disabled()\">\r\n              {{ meridian }}\r\n            </button>\r\n          </td>\r\n        }\r\n      </tr>\r\n\r\n      @if (showSpinners()) {\r\n        <tr>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"keyboard_arrow_down icon\"\r\n              (click)=\"change('hour', false)\"\r\n              [disabled]=\"disabled()\">\r\n              <mat-icon>\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M6 9l6 6 6-6\" />\r\n                </svg>\r\n              </mat-icon>\r\n            </button>\r\n          </td>\r\n          <td></td>\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              mat-icon-button\r\n              aria-label=\"keyboard_arrow_down icon\"\r\n              (click)=\"change('minute', false)\"\r\n              [disabled]=\"disabled() || disableMinute()\">\r\n              <mat-icon\r\n                ><svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"#000000\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\">\r\n                  <path d=\"M6 9l6 6 6-6\" /></svg\r\n              ></mat-icon>\r\n            </button>\r\n          </td>\r\n          @if (showSeconds()) {\r\n            <td></td>\r\n\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                mat-icon-button\r\n                aria-label=\"keyboard_arrow_down icon\"\r\n                (click)=\"change('second', false)\"\r\n                [disabled]=\"disabled() || disableMinute()\">\r\n                <mat-icon\r\n                  ><svg\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"#000000\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\">\r\n                    <path d=\"M6 9l6 6 6-6\" /></svg\r\n                ></mat-icon>\r\n              </button>\r\n            </td>\r\n          }\r\n\r\n          @if (enableMeridian()) {\r\n            <td class=\"ngx-mat-timepicker-spacer\"></td>\r\n            <td></td>\r\n          }\r\n        </tr>\r\n      }\r\n    </tbody>\r\n  </table>\r\n</form>\r\n", styles: [".ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td{text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-spacer{font-weight:700}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-meridian .mdc-button{min-width:64px;line-height:36px;min-width:0;border-radius:50%;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-icon-button{height:24px;width:24px;line-height:24px;padding:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field{width:24px;max-width:24px;text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field.mat-focused .mdc-text-field--filled .mat-mdc-form-field-focus-overlay,.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field:hover .mdc-text-field--filled .mat-mdc-form-field-focus-overlay{background-color:transparent}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled{background-color:transparent!important;padding:0!important}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled .mat-mdc-form-field-infix{padding:4px 0;min-height:1px!important}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-mdc-form-field .mdc-text-field--filled .mat-mdc-form-field-infix input{text-align:center;font-size:14px}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgxMatDateAdapter, decorators: [{
                    type: Optional
                }] }, { type: i0.ChangeDetectorRef }, { type: i2.FormBuilder }] });
//# sourceMappingURL=data:application/json;base64,